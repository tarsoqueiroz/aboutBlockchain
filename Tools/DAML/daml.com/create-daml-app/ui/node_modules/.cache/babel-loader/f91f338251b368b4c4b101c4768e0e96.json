{"ast":null,"code":"var _jsxFileName = \"/Data/Learn/DAML/daml.com/create-daml-app/ui/src/components/PartyListEdit.tsx\";\n// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { Form, List, Button } from 'semantic-ui-react';\n\n/**\n * React component to edit a list of `Party`s.\n */\nconst PartyListEdit = ({\n  parties,\n  onAddParty\n}) => {\n  const [newParty, setNewParty] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  const addParty = async event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    setIsSubmitting(true);\n    const success = await onAddParty(newParty);\n    setIsSubmitting(false);\n\n    if (success) {\n      setNewParty('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(List, {\n    relaxed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, [...parties].sort((x, y) => x.localeCompare(y)).map(party => /*#__PURE__*/React.createElement(List.Item, {\n    key: party,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List.Icon, {\n    name: \"user outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(List.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(List.Header, {\n    className: \"test-select-following\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, party)))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: addParty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    readOnly: isSubmitting,\n    loading: isSubmitting,\n    className: \"test-select-follow-input\",\n    placeholder: \"Username to follow\",\n    value: newParty,\n    onChange: event => setNewParty(event.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"test-select-follow-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Follow\")));\n};\n\nexport default PartyListEdit;","map":{"version":3,"sources":["/Data/Learn/DAML/daml.com/create-daml-app/ui/src/components/PartyListEdit.tsx"],"names":["React","Form","List","Button","PartyListEdit","parties","onAddParty","newParty","setNewParty","useState","isSubmitting","setIsSubmitting","addParty","event","preventDefault","success","sort","x","y","localeCompare","map","party","currentTarget","value"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC;;AAQA;;;AAGA,MAAMC,aAA8B,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAA2B;AAChE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,KAAK,CAACS,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,KAAK,CAACS,QAAN,CAAe,KAAf,CAAxC;;AAEA,QAAMG,QAAQ,GAAG,MAAOC,KAAP,IAAmC;AAClD,QAAIA,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACC,cAAN;AACD;;AACDH,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA,UAAMI,OAAO,GAAG,MAAMT,UAAU,CAACC,QAAD,CAAhC;AACAI,IAAAA,eAAe,CAAC,KAAD,CAAf;;AACA,QAAII,OAAJ,EAAa;AACXP,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,GAVD;;AAYA,sBACE,oBAAC,IAAD;AAAM,IAAA,OAAO,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,GAAGH,OAAJ,EAAaW,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,aAAF,CAAgBD,CAAhB,CAA5B,EAAgDE,GAAhD,CAAqDC,KAAD,iBACnD,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,GAAG,EAAEA,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,SAAS,EAAC,uBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,CADF,CAJF,CADD,CADH,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAcE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAET,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,KAAK,MADP;AAEE,IAAA,QAAQ,EAAEF,YAFZ;AAGE,IAAA,OAAO,EAAEA,YAHX;AAIE,IAAA,SAAS,EAAC,0BAJZ;AAKE,IAAA,WAAW,EAAC,oBALd;AAME,IAAA,KAAK,EAAEH,QANT;AAOE,IAAA,QAAQ,EAAGM,KAAD,IAAWL,WAAW,CAACK,KAAK,CAACS,aAAN,CAAoBC,KAArB,CAPlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CAdF,CADF;AAiCD,CAjDD;;AAmDA,eAAenB,aAAf","sourcesContent":["// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Form, List, Button } from 'semantic-ui-react';\nimport { Party } from '@daml/types';\n\ntype Props = {\n  parties: Party[];\n  onAddParty: (party: Party) => Promise<boolean>;\n}\n\n/**\n * React component to edit a list of `Party`s.\n */\nconst PartyListEdit: React.FC<Props> = ({parties, onAddParty}) => {\n  const [newParty, setNewParty] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  const addParty = async (event?: React.FormEvent) => {\n    if (event) {\n      event.preventDefault();\n    }\n    setIsSubmitting(true);\n    const success = await onAddParty(newParty);\n    setIsSubmitting(false);\n    if (success) {\n      setNewParty('');\n    }\n  }\n\n  return (\n    <List relaxed>\n      {[...parties].sort((x, y) => x.localeCompare(y)).map((party) =>\n        <List.Item\n          key={party}\n        >\n          <List.Icon name='user outline' />\n          <List.Content>\n            <List.Header className='test-select-following'>\n              {party}\n            </List.Header>\n          </List.Content>\n        </List.Item>\n      )}\n      <br />\n      <Form onSubmit={addParty}>\n        <Form.Input\n          fluid\n          readOnly={isSubmitting}\n          loading={isSubmitting}\n          className='test-select-follow-input'\n          placeholder=\"Username to follow\"\n          value={newParty}\n          onChange={(event) => setNewParty(event.currentTarget.value)}\n        />\n        <Button\n          type='submit'\n          className='test-select-follow-button'>\n          Follow\n        </Button>\n      </Form>\n    </List>\n  );\n};\n\nexport default PartyListEdit;\n"]},"metadata":{},"sourceType":"module"}