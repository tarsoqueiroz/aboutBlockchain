# Notes for Chaincode operation

## peer--org1

basic:37276bef1df31a7f4f0ddd3633e6321eb536ee330e1a024b58f0ccdf7ef65d52

### approve chaincode peer0-org1
peer lifecycle chaincode approveformyorg --channelID mychannel --name basic --version 1.0 --init-required --package-id basic:37276bef1df31a7f4f0ddd3633e6321eb536ee330e1a024b58f0ccdf7ef65d52 --sequence 1 -o orderer:7050 --tls --cafile $ORDERER_CA


## peer--org2

basic:7d087bc8127e82b2bbf66c0c6ad4a9b0cd77d33e0980f03cb68e102f9e80f8aa

### approve chaincode peer0-org2
peer lifecycle chaincode approveformyorg --channelID mychannel --name basic --version 1.0 --init-required --package-id basic:7d087bc8127e82b2bbf66c0c6ad4a9b0cd77d33e0980f03cb68e102f9e80f8aa --sequence 1 -o orderer:7050 --tls --cafile $ORDERER_CA


## peer--org3

basic:d85890ec02c1d746b8a483a7eaf39a9cfe3647809c6238905a208758146ca063

### approve chaincode peer0-org3
peer lifecycle chaincode approveformyorg --channelID mychannel --name basic --version 1.0 --init-required --package-id basic:d85890ec02c1d746b8a483a7eaf39a9cfe3647809c6238905a208758146ca063 --sequence 1 -o orderer:7050 --tls --cafile $ORDERER_CA


## In one cli

### checkcommitreadiness
peer lifecycle chaincode checkcommitreadiness --channelID mychannel --name basic --version 1.0 --init-required --sequence 1 -o -orderer:7050 --tls --cafile $ORDERER_CA

### commit chaincode
peer lifecycle chaincode commit -o orderer:7050 --channelID mychannel --name basic --version 1.0 --sequence 1 --init-required --tls true --cafile $ORDERER_CA --peerAddresses peer0-org1:7051 --tlsRootCertFiles /organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses peer0-org2:7051 --tlsRootCertFiles /organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt --peerAddresses peer0-org3:7051 --tlsRootCertFiles /organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt 

### verify
peer lifecycle chaincode querycommitted -C mychannel

### InitLedger command
peer chaincode invoke -o orderer:7050 --isInit --tls true --cafile $ORDERER_CA -C mychannel -n basic --peerAddresses peer0-org1:7051 --tlsRootCertFiles /organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses peer0-org2:7051 --tlsRootCertFiles /organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt --peerAddresses peer0-org3:7051 --tlsRootCertFiles /organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt -c '{"Args":["InitLedger"]}' --waitForEvent

### query command for initial state
peer chaincode query -C mychannel -n basic -c '{"Args":["GetAllAssets"]}'

### invoke command to create a asset
peer chaincode invoke -o orderer:7050 --tls true --cafile $ORDERER_CA -C mychannel -n basic --peerAddresses peer0-org1:7051 --tlsRootCertFiles /organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses peer0-org2:7051 --tlsRootCertFiles /organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt --peerAddresses peer0-org3:7051 --tlsRootCertFiles /organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt -c '{"Args":["CreateAsset","asset100","red","50","tom","300"]}' --waitForEvent

### query command to version last addition
peer chaincode query -C mychannel -n basic -c '{"Args":["GetAllAssets"]}'

